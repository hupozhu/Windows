plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.jfrog.artifactory'
    id 'maven-publish'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "io.reactivex.rxjava3:rxjava:3.0.13"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.github.idisfkj:android-startup:1.0.62'

    implementation "com.squareup.okhttp3:okhttp:4.9.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

def MAVEN_LOCAL_PATH = "http://10.102.156.17:8082/artifactory/"
def ARTIFACT_ID = "startup"
def VERSION_NAME = '0.0.1-SNAPSHOTS'
def GROUP_ID = project.getName()

publishing {    //这段语句，是生成pom文件的task
    publications {
        aarPub(MavenPublication) {
            groupId GROUP_ID
            version = VERSION_NAME
            artifactId ARTIFACT_ID
            // 这里获得aar 生成的位置和上传
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom.withXml {
                def dependencies = asNode().appendNode("dependencies")
                configurations.api.allDependencies.each {
                    def dependency = dependencies.appendNode("dependency")
                    dependency.appendNode("groupId", it.group)
                    dependency.appendNode("artifactId", it.name)
                    dependency.appendNode("version", it.version)
                    //自己使用的一个第三方库
                    if (it.group == "org.linphone") {
                        dependency.appendNode("type", "aar")
                    }
                }
            }
        }
    }
}

artifactoryPublish {
    contextUrl = MAVEN_LOCAL_PATH
    publications("aarPub")
    clientConfig.publisher.repoKey = "local_maven_snapshot"
    clientConfig.publisher.username = "admin"
    clientConfig.publisher.password = "password"
}